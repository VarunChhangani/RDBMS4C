Database in memory

Copyright (C) 2010  blogcprog.com

Database in memory library for C, including string and timer components. 
Designed for dynamic, runtime built-up C data structures in RDBMS style for ANSI C developers.

You can create database tables, indexes (field and function based as well) and relationships between the tables using foreign keys. APIs try to show SQL friendly functions.


Some important API:


Types
-----
db_t_rec_def
db_t_rec
db_t_fld
db_t_pk
db_t_idx
db_t_tab
db_t_cur
db_t_key


DDL
---
db_create_record_definition
db_set_record_definition_field

db_create_pk
db_set_index_field

db_create_table
db_drop_table

db_table_drop_column

db_set_foreign_key_table

db_create_index
db_create_function_based_index
db_set_table_index


DML
---
db_insert_preparation
db_insert_set_field
db_insert_execution

db_update
db_update_foreign_key

db_cursor_delete


Query
-----
db_create_cursor
db_drop_cursor

db_create_key
db_drop_key

db_set_key_field

db_find_by_key

__for_cursor_loop
__end_loop


db_cursor_current
db_cursor_next
db_cursor_prev
db_cursor_first
db_cursor_last


db_get_field_as_char
db_get_field_as_unsigned_char
db_get_field_as_int
db_get_field_as_unsigned_int
db_get_field_as_long
db_get_field_as_unsigned_long
db_get_field_as_float
db_get_field_as_double
db_get_field_as_void
db_get_field_as_char_array
db_get_field_as_foreign_key_record


String
------
db_string_create
db_string_drop
db_string_s_assign
db_string_s_concat
db_string_begins_with
db_string_ends_with
db_string_g_csv_element
db_string_g_substr
db_string_s_substr
db_string_g_trim
db_string_s_trim
db_string_g_lpad
db_string_s_lpad
db_string_g_rpad
db_string_s_rpad
db_string_g_inch
db_string_g_instr
db_string_g_ins
db_string_s_ins
db_string_g_replace
db_string_s_replace


Timer
-----
create_timer
drop_timer
timer_listener

